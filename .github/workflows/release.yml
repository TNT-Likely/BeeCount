name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release tag (手动运行可自定义，留空则使用 manual-<short_sha>)"
        required: false
      release_name:
        description: "Release 名称（可选，默认与 tag 相同）"
        required: false
      prerelease:
        description: "是否标记为 Pre-release（手动运行默认 true）"
        required: false
        default: false
      create_release:
        description: "是否创建 GitHub Release（手动运行可设为 false，仅构建与产出 Actions Artifacts）"
        required: false
        default: true

permissions:
  contents: write

env:
  FLUTTER_VERSION: "3.27.3"

jobs:
  android:
    name: Android (APK + AAB)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android build-tools and platforms
        run: |
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build App Bundle (AAB)
        run: flutter build appbundle --release

      - name: List Android outputs (debug)
        run: |
          echo "== build/app/outputs =="
          ls -R build/app/outputs || true

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          if-no-files-found: error
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab

  ios:
    name: iOS (app.zip + unsigned .ipa)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign

      - name: Build iOS (debug simulator, unsigned)
        run: flutter build ios --debug --simulator

      - name: Package iOS Runner.app (unsigned)
        run: |
          set -euo pipefail
          APP_PATH="build/ios/iphoneos/Runner.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "Runner.app not found at $APP_PATH" >&2
            ls -la build/ios/iphoneos || true
            exit 1
          fi
          ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" Runner-iphoneos.app.zip
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/
          /usr/bin/zip -qry Runner-unsigned.ipa Payload

      - name: Package iOS Simulator Runner.app (debug, unsigned)
        run: |
          set -euo pipefail
          SIM_APP_PATH="build/ios/iphonesimulator/Runner.app"
          if [ -d "$SIM_APP_PATH" ]; then
            ditto -c -k --sequesterRsrc --keepParent "$SIM_APP_PATH" Runner-iphonesimulator.app.zip
          else
            echo "Simulator Runner.app not found at $SIM_APP_PATH" >&2
            ls -la build/ios/iphonesimulator || true
          fi

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: |
            Runner-iphoneos.app.zip
            Runner-unsigned.ipa
            Runner-iphonesimulator.app.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
  needs: [android, ios]
  steps:
      - name: Prepare release metadata
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          IS_TAG="false"
          TAG_NAME=""
          if [[ "${GITHUB_REF:-}" == refs/tags/* ]]; then
            IS_TAG="true"
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          fi
          if [[ -z "$TAG_NAME" ]]; then
            INPUT_TAG="${{ github.event.inputs.tag_name || '' }}"
            if [[ -n "$INPUT_TAG" ]]; then
              TAG_NAME="$INPUT_TAG"
            else
              SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
              TAG_NAME="manual-${SHORT_SHA}"
            fi
          fi
          INPUT_PRERELEASE="${{ github.event.inputs.prerelease || '' }}"
          if [[ "$IS_TAG" == "true" ]]; then
            PRERELEASE="false"
          else
            PRERELEASE=${INPUT_PRERELEASE:-true}
          fi
          INPUT_CREATE="${{ github.event.inputs.create_release || '' }}"
          if [[ "$IS_TAG" == "true" ]]; then
            CREATE_RELEASE="true"
          else
            CREATE_RELEASE=${INPUT_CREATE:-false}
          fi
          RELEASE_NAME_INPUT="${{ github.event.inputs.release_name || '' }}"
          if [[ -n "$RELEASE_NAME_INPUT" ]]; then
            RELEASE_NAME="$RELEASE_NAME_INPUT"
          else
            RELEASE_NAME="$TAG_NAME"
          fi
          echo "is_tag=$IS_TAG" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT
          echo "create_release=$CREATE_RELEASE" >> $GITHUB_OUTPUT
          echo "release_name=$RELEASE_NAME" >> $GITHUB_OUTPUT
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android
          path: ./dist/android

      - name: List downloaded artifacts (debug)
        run: |
          echo "== dist tree =="
          ls -R ./dist || true

      - name: Download iOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios
          path: ./dist/ios

      - name: Generate release notes
        id: notes
        run: |
          TAG="${{ steps.meta.outputs.tag_name }}"
          PREV_TAG=$(git describe --tags --abbrev=0 "${TAG}^" 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            COMMITS=$(git log --no-merges --pretty=format:"- %s ([%h](https://github.com/${GITHUB_REPOSITORY}/commit/%H))" "$PREV_TAG".."$TAG")
          else
            COMMITS=$(git log --no-merges --pretty=format:"- %s ([%h](https://github.com/${GITHUB_REPOSITORY}/commit/%H))")
          fi
          cat > RELEASE_NOTES.md <<'EOF'

          ## 变更记录
          $COMMITS

          EOF
          echo "notes_file=RELEASE_NOTES.md" >> $GITHUB_OUTPUT

      - name: Create Release
        if: ${{ steps.meta.outputs.create_release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag_name }}
          name: ${{ steps.meta.outputs.release_name }}
          prerelease: ${{ steps.meta.outputs.prerelease == 'true' }}
          body_path: ${{ steps.notes.outputs.notes_file }}
          files: |
            dist/android/**/*.apk
            dist/android/**/*.aab
            dist/ios/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
